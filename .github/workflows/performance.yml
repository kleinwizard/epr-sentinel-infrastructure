name: Performance Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run performance tests weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

jobs:
  k6-load-test:
    name: K6 Load Testing
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install backend dependencies
      working-directory: backend
      run: poetry install
    
    - name: Start backend server
      working-directory: backend
      run: |
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8001 &
        sleep 10
      env:
        SECRET_KEY: test-secret-key
        DATABASE_URL: sqlite:///./test.db
        ENVIRONMENT: test
    
    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run load test
      run: k6 run --out json=load-test-results.json performance/k6-load-test.js
    
    - name: Run stress test
      run: k6 run --out json=stress-test-results.json performance/k6-stress-test.js
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: k6-performance-results
        path: |
          load-test-results.json
          stress-test-results.json

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: frontend
      run: npm run build
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install backend dependencies
      working-directory: backend
      run: poetry install
    
    - name: Start backend server
      working-directory: backend
      run: |
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8001 &
        sleep 10
      env:
        SECRET_KEY: test-secret-key
        DATABASE_URL: sqlite:///./test.db
        ENVIRONMENT: test
    
    - name: Serve frontend
      working-directory: frontend
      run: |
        npx serve -s dist -l 8080 &
        sleep 5
    
    - name: Wait for servers
      run: |
        npx wait-on http://localhost:8001/healthz
        npx wait-on http://localhost:8080
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v12
      with:
        configPath: './lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
